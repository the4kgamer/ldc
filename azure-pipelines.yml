pool:
  vmImage: 'vs2017-win2016'

steps:
- bash: |
    set -exo pipefail
    git submodule update --init --recursive
    curl -L -o libcurl.zip https://dl.dropboxusercontent.com/s/jxwohqax4e2avyt/libcurl-7.48.0-WinSSL-zlib-x86-x64.zip?dl=0
    mkdir libcurl
    cd libcurl
    7z x ../libcurl.zip > /dev/null
    cd ..
    mkdir libcurl/ldc2
    cp libcurl/dmd2/windows/bin64/libcurl.dll libcurl/ldc2
    cp libcurl/dmd2/windows/lib64/curl.lib libcurl/ldc2
    curl -L -o ninja.zip https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-win.zip
    mkdir ninja
    cd ninja
    7z x ../ninja.zip > /dev/null
    cd ..
    curl -L -o ldc2.7z http://github.com/ldc-developers/ldc/releases/download/v1.13.0/ldc2-1.13.0-windows-x64.7z
    7z x ldc2.7z > /dev/null
    curl -L -o llvm.7z https://github.com/ldc-developers/llvm/releases/download/ldc-v7.0.1/llvm-7.0.1-windows-x64-clang.7z
    mkdir llvm
    cd llvm
    7z x ../llvm.7z > /dev/null
    cd ..
    curl -L -o clang.exe http://releases.llvm.org/7.0.1/LLVM-7.0.1-win64.exe
  displayName: 'Install prerequisites & blub'
- pwsh: Start-Process .\clang.exe -ArgumentList '/S' -Wait
- bash: |
    export PATH="$PWD/ninja:$PWD/llvm/bin:/C/Program Files/LLVM/bin:$PWD/libcurl/ldc2:$PATH"
    cmake --version
    ninja --version
    clang-cl --version
    mkdir build
    cd build
    cmake -G Ninja -DCMAKE_C_COMPILER:PATH=clang-cl.exe -DCMAKE_CXX_COMPILER:PATH=clang-cl.exe -DCMAKE_BUILD_TYPE=Release -DLLVM_ROOT_DIR=$PWD/../llvm -DD_COMPILER=$PWD/../ldc2-1.13.0-windows-x64/bin/ldmd2 ..
    ninja -j2
